<#@ template language="c#" HostSpecific="True" #><#@ output extension= ".cs" #><#
	TableHost host = (TableHost)(Host);
	host.NameSpace="FireflySoft";
	string classname=host.GetModelClass(host.TableName).Replace("TBL_","").Replace("v_","V");	
	if( host.TableDescription.Length > 0) {
		classname=host.TableDescription;
	}else{
		classname=System.Threading.Thread.CurrentThread.CurrentCulture.TextInfo.ToTitleCase(classname);
	}
	string ModelSpace = host.NameSpace + ".Model."   + classname +"Model";
	string ModelName=classname+"Model";
	host.Fieldlist.Sort(CodeCommon.CompareByintOrder);
#>using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
namespace <#= host.NameSpace #>.Model<# if( host.Folder.Length > 0) {#>.<#= host.Folder #><# } #>

{
	<# if( host.TableDescription.Length > 0) {#>
/// <summary>
    /// <#= host.TableDescription #>
    /// </summary><# } #>
	
	public partial class <#=ModelName #>
	{
		#region 类属性
<# foreach (ColumnInfo c in host.Fieldlist)
{ #>
		/// <summary>
		/// <#= string.IsNullOrEmpty(c.Description) ? c.ColumnName : c.Description #>
        /// </summary>
        public <#= CodeCommon.DbTypeToCS(c.TypeName) #><#=(CodeCommon.isValueType(CodeCommon.DbTypeToCS(c.TypeName))&& c.Nullable==true?"?":"") #> <#= c.ColumnName #>{set;get;}
<#}#>
		
		/// <summary>
		/// 获取属性描述
        /// </summary>
		public static Dictionary<string, string> GetPropertiesDescription()
        {
            Dictionary<string, string> dic = new Dictionary<string, string>();
			<# foreach (ColumnInfo c in host.Fieldlist)
			{ #>
			dic.Add("<#= c.ColumnName #>","<#= string.IsNullOrEmpty(c.Description) ? c.ColumnName : c.Description #>");
			<# } #>
            return dic;
        }
		#endregion
	}
}